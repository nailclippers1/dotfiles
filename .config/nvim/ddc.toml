# ddc.toml
# ======================================

[[plugins]]
repo = 'Shougo/ddc.vim'
depends = ['denops.vim', 'pum.vim']
# depends = ['context_filetype.vim', 'denops.vim', 'pum.vim']
on_event = ['InsertEnter', 'CursorHold']
hook_source = '''
  call ddc#custom#patch_global('sources', [
      \ 'around',
      \ 'nvim-lsp',
      \ 'file',
      \ 'dictionary',
      \ 'mocword',
      \ ])
 
  call ddc#custom#patch_global('sourceOptions', {
      \ '_': {
      \   'ignoreCase': v:true,
      \   'matchers': ['matcher_head'],
      \   'sorters': ['sorter_rank'],
      \   'converters': [
      \     'converter_remove_overlap', 'converter_truncate_abbr'
      \   ],
      \ },
      \ 'around': {
      \   'mark': 'around',
      \   'matchers': ['matcher_head', 'matcher_length'],
      \ },
      \ 'file': {
      \   'mark': 'file',
      \   'isVolatile': v:true,
      \   'minAutoCompleteLength': 1000,
      \   'forceCompletionPattern': '\S/\S*',
      \ },
      \ 'dictionary': {'mark': 'Dictionary'},
      \ 'mocword': {
      \   'mark': 'mocword',
      \   'minAutoCompleteLength': 3,
      \   'isVolatile': v:true,
      \ },
      \ 'nvim-lsp': {
      \   'mark': 'lsp',
      \   'forceCompletionPattern': '\.\w*|:\w*|->\w*',
      \ },
      \})
  
  call ddc#custom#patch_global('sourceParams', {
      \ 'around': {'maxCandidates': 10},
      \ 'dictionary': {'dictPaths': 
      \   ['C:\\Users\\taishi\\share\\dict\\american-english',
      \   'C:\\Users\taishi\\share\\dict\\words',],
      \   'smartCase': v:true,
      \   'showMenu': v:false,
      \ }
      \})

  " Use pum.vim
  call ddc#custom#patch_global('autoCompleteEvents', [
      \ 'InsertEnter', 'TextChangedI', 'TextChangedP',
      \ 'CmdlineEnter', 'CmdlineChanged',
      \ ])
  call ddc#custom#patch_global('completionMenu', 'pum.vim')
  call ddc#custom#set_context('go', { ->
      \ ddc#syntax#in('TSComment') ? {
      \   'sources': ['around', 'mocword'],
      \ } : {} })
  call ddc#custom#set_context('c', { ->
      \ ddc#syntax#in('Comment') ? {
      \   'sources': ['around', 'mocword'],
      \ } : {} })

  " For insert mode completion
  inoremap <silent><expr> <TAB>
       \ pum#visible() ? '<Cmd>call pum#map#insert_relative(+1)<CR>' :
       \ (col('.') <= 1 <Bar><Bar> getline('.')[col('.') - 2] =~# '\s') ?
       \ '<TAB>' : ddc#manual_complete()
  inoremap <S-TAB> <Cmd>call pum#map#insert_relative(-1)<CR>
  inoremap <C-n>   <Cmd>call pum#map#select_relative(+1)<CR>
  inoremap <C-p>   <Cmd>call pum#map#select_relative(-1)<CR>
  inoremap <C-y>   <Cmd>call pum#map#confirm()<CR>
  inoremap <C-e>   <Cmd>call pum#map#cancel()<CR>
  inoremap <silent><expr> <C-l>   ddc#map#extend()
 
  " For command line mode completion
  cnoremap <expr> <Tab>
  \ pum#visible() ? '<Cmd>call pum#map#insert_relative(+1)<CR>' :
  \ exists('b:ddc_cmdline_completion') ? ddc#manual_complete() : "\<Tab>"
  cnoremap <S-Tab> <Cmd>call pum#map#insert_relative(-1)<CR>
  cnoremap <C-c>   <Cmd>call pum#map#cancel()<CR>
  cnoremap <C-o>   <Cmd>call pum#map#confirm()<CR>
  
  call ddc#enable()
'''

[[plugins]]
repo = 'Shougo/pum.vim'

[[plugins]]
repo = 'Shougo/ddc-around'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-file'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = ['vim', 'toml', 'markdown']
depends = 'ddc.vim'
hook_source = '''
  call ddc#custom#patch_filetype(
          \ ['vim'], 'sources', ['necovim', 'around', 'file']
          \ )
'''

[[plugins]]
repo = 'Shougo/ddc-matcher_head'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-matcher_length'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-converter_remove_overlap'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-converter_truncate_abbr'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-nvim-lsp'
on_source = 'ddc.vim'

# dictionary sources

[[plugins]]
repo = 'Shougo/ddc-mocword'
on_source = 'ddc.vim'

[[plugins]]
repo = 'matsui54/ddc-dictionary'
on_source = 'ddc.vim'
